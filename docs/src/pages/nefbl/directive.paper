<template class='doc-view'>
    <header>
        指令
    </header>
    <h2 id='fixed-ui-bind'>
        ui-bind
    </h2>
    <pre q-code>
import uiBind from 'sprout-ui/nefbl/directive/ui-bind'

@Module({
    declarations: [uiBind]
})
export default class {}
    </pre>
    <p>
        只会主动同步数据到视图。
    </p>
    <pre q-code='html'>
        <div ui-bind='param' ui-bind:param='param'></div>
    </pre>
    <p>
        上面我们演示了两种用法，第一种会修改标签的value或innerText,第二种会修改标签的param属性。
    </p>
    <p class='warn'>
        温馨提示：其中param表示双向绑定的数据（下同）。
    </p>
    <h2 id='fixed-ui-model'>
        ui-model
    </h2>
    <pre q-code>
import uiModel from 'sprout-ui/nefbl/directive/ui-model'

@Module({
    declarations: [uiModel]
})
export default class {}
    </pre>
    <p>
        一般用于输入框，可以实现视图和数据之间的同步。
    </p>
    <pre q-code='html'>
        <input ui-model='param'/>
    </pre>
    <h2 id='fixed-ui-on'>
        ui-on
    </h2>
    <pre q-code>
    import uiOn from 'sprout-ui/nefbl/directive/ui-on'

    @Module({
        declarations: [uiOn]
    })
    export default class {}
        </pre>
    <p>
        用于在标签中注册DOM事件。
    </p>
    <pre q-code='html'>
        <div ui-on:click='doit'>点击我</div>
    </pre>
    <p>
        上面我们演示的是单击，如果把.click改成.dblclick就是双击，别的DOM事件也类似。
    </p>
    <p>
        除此之外，还有几个特殊的选项（可以同时使用）：
    </p>
    <pre q-code='html'>
        <div ui-on:click.once='doit'>点击我</div>
    </pre>
    <p>
        上面我们添加了.once，表示点击一次后就会失效,一共有以下可选：
    </p>
    <ul>
        <li>
            1.prevent 阻止默认事件
        </li>
        <li>
            2.stop 阻止冒泡
        </li>
        <li>
            3.once 只执行一次
        </li>
    </ul>
    <h2 id='fixed-ui-code'>
        ui-code
    </h2>
    <pre q-code>
import uiCode from 'sprout-ui/nefbl/directive/ui-code'

@Module({
    declarations: [uiCode]
})
export default class {}
    </pre>
    <p>
        用于在页面显示一个内嵌的代码编辑器，不可编辑：
    </p>
    <pre q-code='html'>
<div ui-code></div>
    </pre>
    <p>
        当然，你也可以设置代码语言，可选的语言有：javascript（默认值）、css、html。
    </p>
    <p>
        如何指定？例如：
    </p>
    <pre q-code='html'>
<div ui-code='html'></div>
    </pre>
    <h2 id='fixed-ui-lazy'>
        ui-lazy
    </h2>
    <pre q-code>
import uiLazy from 'sprout-ui/nefbl/directive/ui-lazy'

@Module({
    declarations: [uiLazy]
})
export default class {}
    </pre>
    <p>
        用于实现页面懒加载。比如现在有一个懒加载定义的页面：
    </p>
    <pre q-code>
let page1=()=>import('./page1/index')
    </pre>
    <p>
        通过ref定义了一个双向绑定的变量page，你可以先把上面懒加载的页面加载后赋值给变量：
    </p>
    <pre q-code>
page1().then(data=>{
    this.page=data.default
})
    </pre>
    <p>
        如何让page1在页面中显示？此时就可以使用这个指令了：
    </p>
    <pre q-code>
<div ui-lazy='page'></div>
    </pre>
    <p>
        当然，后续你可以通过修改this.page的值来实现显示别的懒加载页面，也就是实现了局部的翻页功能。
    </p>
</template>
